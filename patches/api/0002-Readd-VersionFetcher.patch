From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Pascalpex <pascalpex@gmail.com>
Date: Wed, 23 Mar 2022 20:09:32 +0100
Subject: [PATCH] Readd VersionFetcher


diff --git a/src/main/java/org/bukkit/command/defaults/VersionCommand.java b/src/main/java/org/bukkit/command/defaults/VersionCommand.java
index d9a5bc41b183a3bb4d77d1110c71a8f98ebc9731..b7fa160a305ee89004c11a3d8a01ac3b721f59b6 100644
--- a/src/main/java/org/bukkit/command/defaults/VersionCommand.java
+++ b/src/main/java/org/bukkit/command/defaults/VersionCommand.java
@@ -1,6 +1,6 @@
 package org.bukkit.command.defaults;
 
-//import com.destroystokyo.paper.util.VersionFetcher; // Paper - version supplier // Patina - remove
+import com.destroystokyo.paper.util.VersionFetcher; // Paper - version supplier
 import com.google.common.base.Charsets;
 import com.google.common.collect.ImmutableList;
 import com.google.common.io.Resources;
@@ -28,7 +28,6 @@ import org.bukkit.util.StringUtil;
 import org.jetbrains.annotations.NotNull;
 
 public class VersionCommand extends BukkitCommand {
-    /* // Patina
     private VersionFetcher versionFetcher;
     private VersionFetcher getVersionFetcher() { // lazy load because unsafe isn't available at command registration
         if (versionFetcher == null) {
@@ -37,7 +36,6 @@ public class VersionCommand extends BukkitCommand {
 
         return versionFetcher;
     }
-    */
 
     public VersionCommand(@NotNull String name) {
         super(name);
@@ -53,8 +51,8 @@ public class VersionCommand extends BukkitCommand {
         if (!testPermission(sender)) return true;
 
         if (args.length == 0) {
-            sender.sendMessage("This server is running " + Bukkit.getName() + " version " + Bukkit.getVersion() + " (Implementing API version " + Bukkit.getBukkitVersion() + ")"); // Paper - moved to setVersionMessage // Patina
-            //sendVersion(sender); // Patina
+            //sender.sendMessage("This server is running " + Bukkit.getName() + " version " + Bukkit.getVersion() + " (Implementing API version " + Bukkit.getBukkitVersion() + ")"); // Paper - moved to setVersionMessage
+            sendVersion(sender);
         } else {
             StringBuilder name = new StringBuilder();
 
@@ -157,7 +155,6 @@ public class VersionCommand extends BukkitCommand {
         return ImmutableList.of();
     }
 
-    /* // Patina - remove
     private final ReentrantLock versionLock = new ReentrantLock();
     private boolean hasVersion = false;
     private Component versionMessage = null; // Paper
@@ -236,7 +233,7 @@ public class VersionCommand extends BukkitCommand {
         } else {
             setVersionMessage("Unknown version, custom build?");
         }
-
+         */
         // Paper end
     }
 
@@ -289,5 +286,4 @@ public class VersionCommand extends BukkitCommand {
             return -1;
         }
     }
-    */
 }
