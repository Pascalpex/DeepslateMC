From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Pascalpex <pascalpex@gmail.com>
Date: Thu, 14 Jul 2022 15:11:09 +0200
Subject: [PATCH] Metrics stats


diff --git a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
index e7d5ff0e49b3aa241ed25b2be49f4254ed6649d3..7691864f43f9701fc1336572186dc558bbfb5d25 100644
--- a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
+++ b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
@@ -13,10 +13,7 @@ import java.net.Proxy;
 import java.nio.charset.StandardCharsets;
 import java.nio.file.Files;
 import java.nio.file.Path;
-import java.util.Collections;
-import java.util.List;
-import java.util.Locale;
-import java.util.Optional;
+import java.util.*;
 import java.util.function.BooleanSupplier;
 import javax.annotation.Nullable;
 import net.minecraft.DefaultUncaughtExceptionHandler;
@@ -55,6 +52,7 @@ import net.minecraft.world.level.GameRules;
 import net.minecraft.world.level.GameType;
 import net.minecraft.world.level.block.entity.SkullBlockEntity;
 import net.minecraft.world.level.storage.LevelStorageSource;
+import net.pascalpex.deepslatemc.Config;
 import net.pascalpex.deepslatemc.commands.*;
 import org.slf4j.Logger;
 
@@ -224,6 +222,14 @@ public class DedicatedServer extends MinecraftServer implements ServerInterface
         thread.start(); // Paper - start console thread after MinecraftServer.console & PaperConfig are initialized
         io.papermc.paper.command.PaperCommands.registerCommands(this);
         com.destroystokyo.paper.Metrics.PaperMetrics.startMetrics();
+
+        // Deepslate start - Metrics stats
+        if(Config.getMetricsEnabled()) {
+            net.pascalpex.deepslatemc.util.Metrics metrics = new net.pascalpex.deepslatemc.util.Metrics(UUID.randomUUID());
+            metrics.startSending();
+        }
+        // Deepslate end
+
         // Purpur start
         try {
             org.purpurmc.purpur.PurpurConfig.init((java.io.File) options.valueOf("purpur-settings"));
diff --git a/src/main/java/net/pascalpex/deepslatemc/Config.java b/src/main/java/net/pascalpex/deepslatemc/Config.java
index 6dc972159ef97544491b693b248195b405b1b129..8d2ece0c1cb3474483a65b03a2a6349ecac7902f 100644
--- a/src/main/java/net/pascalpex/deepslatemc/Config.java
+++ b/src/main/java/net/pascalpex/deepslatemc/Config.java
@@ -50,6 +50,9 @@ public class Config {
                 List<String> worldsList = new ArrayList<>();
                 worldsList.add("FantasyWorld");
                 config.set("autoSmelt" + ".enabledWorlds", worldsList);
+            }
+            if (!config.contains("metrics")) {
+                config.set("metrics", true);
             }
                 save();
         } catch (IOException | InvalidConfigurationException e) {
@@ -65,6 +68,10 @@ public class Config {
         }
     }
 
+    public static boolean getMetricsEnabled() {
+        return config.getBoolean("metrics");
+    }
+
     public static int getAutoSmeltPrice() {
         return config.getInt("autoSmelt" + ".price");
     }
diff --git a/src/main/java/net/pascalpex/deepslatemc/util/Metrics.java b/src/main/java/net/pascalpex/deepslatemc/util/Metrics.java
new file mode 100644
index 0000000000000000000000000000000000000000..136d30d7e25895adf5be857aeac94c46cb330ec0
--- /dev/null
+++ b/src/main/java/net/pascalpex/deepslatemc/util/Metrics.java
@@ -0,0 +1,43 @@
+package net.pascalpex.deepslatemc.util;
+    
+import org.bukkit.Bukkit;
+
+import java.io.IOException;
+import java.net.URL;
+import java.util.Timer;
+import java.util.TimerTask;
+import java.util.UUID;
+import java.util.concurrent.Executors;
+import java.util.concurrent.ScheduledExecutorService;
+
+public class Metrics {
+
+    UUID uuid;
+    Timer timer = new Timer();
+    private ScheduledExecutorService scheduler;
+
+    public Metrics(UUID uuid) {
+        this.uuid = uuid;
+        scheduler = Executors.newScheduledThreadPool(1);
+    }
+
+    public void startSending() {
+        timer.scheduleAtFixedRate(task, 10000, 300000);
+    }
+
+    TimerTask task = new TimerTask() {
+        @Override
+        public void run() {
+            int players = Bukkit.getOnlinePlayers().size();
+            String minecraftVersion = Bukkit.getVersion();
+            minecraftVersion = minecraftVersion.substring(minecraftVersion.indexOf("MC: ") + 4, minecraftVersion.length() - 1);
+            String deepslateVersion = this.getClass().getPackage().getImplementationVersion().replace('"', ' ').replace(" ", "");
+            String urlString = "https://pascalpex.ddns.net/metrics/deepslate/submit.php?uuid=" + uuid.toString() + "&players=" + players + "&mc=" + minecraftVersion + "&deepslate=" + deepslateVersion;
+            try {
+                URL url = new URL(urlString);
+                url.openConnection().getInputStream();
+            } catch (IOException ignored) {}
+        }
+    };
+
+}
