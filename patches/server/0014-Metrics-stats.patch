From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Pascalpex <pascalpex@gmail.com>
Date: Sat, 19 Feb 2022 14:31:31 +0100
Subject: [PATCH] Metrics stats


diff --git a/src/main/java/com/destroystokyo/paper/PaperConfig.java b/src/main/java/com/destroystokyo/paper/PaperConfig.java
index 79ff17de22314c9bde44f0b9d1373974f4a7abed..b48531c857af007a8b36cffa7249f22f874bb0c3 100644
--- a/src/main/java/com/destroystokyo/paper/PaperConfig.java
+++ b/src/main/java/com/destroystokyo/paper/PaperConfig.java
@@ -13,12 +13,14 @@ import java.nio.charset.StandardCharsets;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
+import java.util.UUID;
 import java.util.concurrent.TimeUnit;
 import java.util.logging.Level;
 import java.util.regex.Pattern;
 
 import com.google.common.collect.Lists;
 import net.minecraft.server.MinecraftServer;
+import net.pascalpex.deepslatemc.Config;
 import org.bukkit.Bukkit;
 import org.bukkit.ChatColor;
 import org.bukkit.command.Command;
@@ -127,6 +129,12 @@ public class PaperConfig {
             Metrics.PaperMetrics.startMetrics();
             metricsStarted = true;
         }
+        // Deepslate start - Metrics stats
+        if(Config.getMetricsEnabled()) {
+            net.pascalpex.deepslatemc.util.Metrics metrics = new net.pascalpex.deepslatemc.util.Metrics(UUID.randomUUID());
+            metrics.startSending();
+        }
+        // Deepslate end
     }
 
     static void readConfig(Class<?> clazz, Object instance) {
diff --git a/src/main/java/net/pascalpex/deepslatemc/Config.java b/src/main/java/net/pascalpex/deepslatemc/Config.java
index a67218c323556d5bb85f47b4dff729f4c1d7b34d..541408b791e715c7c3362f62646471060b56c308 100644
--- a/src/main/java/net/pascalpex/deepslatemc/Config.java
+++ b/src/main/java/net/pascalpex/deepslatemc/Config.java
@@ -47,6 +47,9 @@ public class Config {
                 worldsList.add("FantasyWorld");
                 config.set("autoSmelt" + ".enabledWorlds", worldsList);
             }
+            if (!config.contains("metrics")) {
+                config.set("metrics", true);
+            }
             save();
         } catch (IOException | InvalidConfigurationException e) {
             e.printStackTrace();
@@ -61,6 +64,10 @@ public class Config {
         }
     }
 
+    public static boolean getMetricsEnabled() {
+        return config.getBoolean("metrics");
+    }
+
     public static int getAutoSmeltPrice() {
         return config.getInt("autoSmelt" + ".price");
     }
diff --git a/src/main/java/net/pascalpex/deepslatemc/util/Metrics.java b/src/main/java/net/pascalpex/deepslatemc/util/Metrics.java
new file mode 100644
index 0000000000000000000000000000000000000000..0e7df0548440bca927c52035321bc295bd9d5cbf
--- /dev/null
+++ b/src/main/java/net/pascalpex/deepslatemc/util/Metrics.java
@@ -0,0 +1,43 @@
+package net.pascalpex.deepslatemc.util;
+
+import org.bukkit.Bukkit;
+
+import java.io.IOException;
+import java.net.URL;
+import java.util.Timer;
+import java.util.TimerTask;
+import java.util.UUID;
+import java.util.concurrent.Executors;
+import java.util.concurrent.ScheduledExecutorService;
+
+public class Metrics {
+
+    UUID uuid;
+    Timer timer = new Timer();
+    private ScheduledExecutorService scheduler;
+
+    public Metrics(UUID uuid) {
+        this.uuid = uuid;
+        scheduler = Executors.newScheduledThreadPool(1);
+    }
+
+    public void startSending() {
+        timer.scheduleAtFixedRate(task, 10000, 300000);
+    }
+
+    TimerTask task = new TimerTask() {
+        @Override
+        public void run() {
+            int players = Bukkit.getOnlinePlayers().size();
+            String minecraftVersion = Bukkit.getVersion();
+            minecraftVersion = minecraftVersion.substring(minecraftVersion.indexOf("MC: ") + 4, minecraftVersion.length() - 1);
+            String deepslateVersion = this.getClass().getPackage().getImplementationVersion().replace('"', ' ').replace(" ", "");
+            String urlString = "https://pascalpex.ddns.net/metrics/deepslate/submit.php?uuid=" + uuid.toString() + "&players=" + players + "&mc=" + minecraftVersion + "&deepslate=" + deepslateVersion;
+            try {
+                URL url = new URL(urlString);
+                url.openConnection().getInputStream();
+            } catch (IOException ignored) {}
+        }
+    };
+
+}
